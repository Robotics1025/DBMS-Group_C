generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model accounts {
  id                  Int       @id @default(autoincrement())
  user_id             Int
  provider            String    @db.VarChar(255)
  provider_account_id String    @db.VarChar(255)
  access_token        String?   @db.Text
  refresh_token       String?   @db.Text
  expires_at          DateTime? @db.Timestamp(0)
  created_at          DateTime? @default(now()) @db.Timestamp(0)
  users               users     @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "accounts_ibfk_1")

  @@unique([provider, provider_account_id], map: "uq_provider_account")
  @@index([user_id], map: "idx_accounts_user_id")
}

model leases {
  id             Int              @id @default(autoincrement())
  tenant_id      Int
  unit_id        Int
  start_date     DateTime?        @db.Date
  end_date       DateTime?        @db.Date
  rent_amount    Decimal?         @db.Decimal(10, 2)
  created_at     DateTime?        @default(now()) @db.Timestamp(0)
  updated_at     DateTime?        @default(now()) @db.Timestamp(0)
  tenants        tenants          @relation(fields: [tenant_id], references: [id], map: "leases_ibfk_1")
  property_units property_units   @relation(fields: [unit_id], references: [id], map: "leases_ibfk_2")
  rent_schedules rent_schedules[]

  @@index([tenant_id], map: "idx_leases_tenant_id")
  @@index([unit_id], map: "idx_leases_unit_id")
}

model notifications {
  id             Int            @id @default(autoincrement())
  schedule_id    Int
  sent_date      DateTime?      @db.Date
  type           String?        @db.VarChar(50)
  status         String?        @default("Pending") @db.VarChar(50)
  message        String?        @db.Text
  created_at     DateTime?      @default(now()) @db.Timestamp(0)
  updated_at     DateTime?      @default(now()) @db.Timestamp(0)
  rent_schedules rent_schedules @relation(fields: [schedule_id], references: [id], onDelete: Cascade, map: "notifications_ibfk_1")

  @@index([schedule_id], map: "idx_notifications_schedule_id")
}

model owners {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(255)
  contact    String?      @db.VarChar(255)
  created_at DateTime?    @default(now()) @db.Timestamp(0)
  updated_at DateTime?    @default(now()) @db.Timestamp(0)
  properties properties[]
}

model payment_transactions {
  id             Int            @id @default(autoincrement())
  schedule_id    Int
  amount_paid    Decimal        @db.Decimal(10, 2)
  payment_date   DateTime       @db.Date
  method         String?        @db.VarChar(100)
  created_at     DateTime?      @default(now()) @db.Timestamp(0)
  updated_at     DateTime?      @default(now()) @db.Timestamp(0)
  rent_schedules rent_schedules @relation(fields: [schedule_id], references: [id], onDelete: Cascade, map: "payment_transactions_ibfk_1")
  receipts       receipts[]

  @@index([schedule_id], map: "idx_payment_transactions_schedule_id")
}

model properties {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar(255)
  address        String?          @db.VarChar(500)
  owner_id       Int
  image_url      String?          @db.VarChar(500)
  created_at     DateTime?        @default(now()) @db.Timestamp(0)
  updated_at     DateTime?        @default(now()) @db.Timestamp(0)
  owners         owners           @relation(fields: [owner_id], references: [id], map: "properties_ibfk_1")
  property_units property_units[]

  @@index([owner_id], map: "idx_properties_owner_id")
}

model property_units {
  id          Int        @id @default(autoincrement())
  property_id Int
  unit_number String     @db.VarChar(255)
  bedrooms    Int?       @default(0)
  bathrooms   Int?       @default(0)
  has_store   Boolean?   @default(false)
  rent_amount Decimal?   @default(0.00) @db.Decimal(10, 2)
  status      String?    @default("Available") @db.VarChar(50)
  created_at  DateTime?  @default(now()) @db.Timestamp(0)
  updated_at  DateTime?  @default(now()) @db.Timestamp(0)
  leases      leases[]
  properties  properties @relation(fields: [property_id], references: [id], onDelete: Cascade, map: "property_units_ibfk_1")

  @@unique([property_id, unit_number], map: "uq_property_unit")
  @@index([property_id], map: "idx_property_units_property_id")
}

model receipts {
  id                   Int                  @id @default(autoincrement())
  payment_id           Int
  receipt_number       String?              @unique(map: "receipt_number") @db.VarChar(255)
  issued_date          DateTime             @db.Date
  amount               Decimal              @db.Decimal(10, 2)
  method               String?              @db.VarChar(100)
  tenant_id            Int
  created_at           DateTime?            @default(now()) @db.Timestamp(0)
  updated_at           DateTime?            @default(now()) @db.Timestamp(0)
  payment_transactions payment_transactions @relation(fields: [payment_id], references: [id], onDelete: Cascade, map: "receipts_ibfk_1")
  tenants              tenants              @relation(fields: [tenant_id], references: [id], map: "receipts_ibfk_2")

  @@index([payment_id], map: "idx_receipts_payment_id")
  @@index([tenant_id], map: "idx_receipts_tenant_id")
}

model rent_schedules {
  id                   Int                    @id @default(autoincrement())
  lease_id             Int
  due_date             DateTime               @db.Date
  amount_due           Decimal                @db.Decimal(10, 2)
  status               String?                @default("Pending") @db.VarChar(50)
  created_at           DateTime?              @default(now()) @db.Timestamp(0)
  updated_at           DateTime?              @default(now()) @db.Timestamp(0)
  notifications        notifications[]
  payment_transactions payment_transactions[]
  leases               leases                 @relation(fields: [lease_id], references: [id], onDelete: Cascade, map: "rent_schedules_ibfk_1")

  @@index([due_date], map: "idx_rent_schedules_due_date")
  @@index([lease_id], map: "idx_rent_schedules_lease_id")
}

model sessions {
  id            Int       @id @default(autoincrement())
  user_id       Int
  session_token String    @unique(map: "session_token") @db.VarChar(255)
  expires_at    DateTime? @db.Timestamp(0)
  created_at    DateTime? @default(now()) @db.Timestamp(0)
  updated_at    DateTime? @default(now()) @db.Timestamp(0)
  users         users     @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "sessions_ibfk_1")

  @@index([user_id], map: "idx_sessions_user_id")
}

model tenants {
  id         Int        @id @default(autoincrement())
  name       String     @db.VarChar(255)
  contact    String?    @db.VarChar(255)
  email      String?    @unique(map: "email") @db.VarChar(255)
  created_at DateTime?  @default(now()) @db.Timestamp(0)
  updated_at DateTime?  @default(now()) @db.Timestamp(0)
  leases     leases[]
  receipts   receipts[]
}

model users {
  id            Int        @id @default(autoincrement())
  email         String     @unique(map: "email") @db.VarChar(255)
  password_hash String?    @db.VarChar(255)
  name          String?    @db.VarChar(255)
  avatar_url    String?    @db.VarChar(500)
  role          String?    @default("admin") @db.VarChar(50)
  is_active     Boolean?   @default(true)
  created_at    DateTime?  @default(now()) @db.Timestamp(0)
  updated_at    DateTime?  @default(now()) @db.Timestamp(0)
  accounts      accounts[]
  sessions      sessions[]
}

model verification_tokens {
  identifier String    @db.VarChar(255)
  token      String    @db.VarChar(255)
  expires_at DateTime? @db.Timestamp(0)

  @@id([identifier, token])
}
